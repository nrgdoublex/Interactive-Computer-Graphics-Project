// generated by Fast Light User Interface Designer (fluid) version 1.0303

#include "gui.h"

void MainUI::cb_animateBtn_i(Fl_Button*, void*) {
  animation();
}
void MainUI::cb_animateBtn(Fl_Button* o, void* v) {
  ((MainUI*)(o->parent()->user_data()))->cb_animateBtn_i(o,v);
}

void MainUI::cb_btnHWTexMap_i(Fl_Button*, void*) {
  showHWTexMap();
}
void MainUI::cb_btnHWTexMap(Fl_Button* o, void* v) {
  ((MainUI*)(o->parent()->user_data()))->cb_btnHWTexMap_i(o,v);
}

void MainUI::cb_btnHWFilled_i(Fl_Button*, void*) {
  showHWFilledMode();
}
void MainUI::cb_btnHWFilled(Fl_Button* o, void* v) {
  ((MainUI*)(o->parent()->user_data()))->cb_btnHWFilled_i(o,v);
}

void MainUI::cb_btnHWWireFrame_i(Fl_Button*, void*) {
  showHWWireFrameMode();
}
void MainUI::cb_btnHWWireFrame(Fl_Button* o, void* v) {
  ((MainUI*)(o->parent()->user_data()))->cb_btnHWWireFrame_i(o,v);
}

void MainUI::cb_btnGPUShader_i(Fl_Button*, void*) {
  showGPUShader();
}
void MainUI::cb_btnGPUShader(Fl_Button* o, void* v) {
  ((MainUI*)(o->parent()->user_data()))->cb_btnGPUShader_i(o,v);
}
#include "FrameBufferWrapper.h"
#include "FrameBuffer.h"
#include "PPC.h"

MainUI::MainUI() {
  { uiwindow = new Fl_Double_Window(360, 323, "GUI");
    uiwindow->user_data((void*)(this));
    { animateBtn = new Fl_Button(5, 60, 170, 25, "Animation");
      animateBtn->callback((Fl_Callback*)cb_animateBtn);
    } // Fl_Button* animateBtn
    { btnHWTexMap = new Fl_Button(185, 60, 170, 45, "HW Texture Map");
      btnHWTexMap->callback((Fl_Callback*)cb_btnHWTexMap);
    } // Fl_Button* btnHWTexMap
    { btnHWFilled = new Fl_Button(5, 10, 170, 45, "FilledMode");
      btnHWFilled->callback((Fl_Callback*)cb_btnHWFilled);
      btnHWFilled->align(Fl_Align(FL_ALIGN_WRAP));
    } // Fl_Button* btnHWFilled
    { btnHWWireFrame = new Fl_Button(185, 10, 170, 45, "WireFrame Mode");
      btnHWWireFrame->callback((Fl_Callback*)cb_btnHWWireFrame);
    } // Fl_Button* btnHWWireFrame
    { btnGPUShader = new Fl_Button(185, 110, 170, 45, "GPU Shader");
      btnGPUShader->callback((Fl_Callback*)cb_btnGPUShader);
    } // Fl_Button* btnGPUShader
    uiwindow->end();
  } // Fl_Double_Window* uiwindow
}

int main(int argc, char **argv) {
  wrapper = new FrameBufferWrapper(640,480);
  return Fl::run();
}

void MainUI::show() {
  width = 640;
  height = 480;
  uiwindow->show();
}

void MainUI::animation() {
  wrapper->animation();
}

void MainUI::showHWTexMap() {
  wrapper->demoHWTexMap();
}

void MainUI::showHWFilledMode() {
  wrapper->demoHWFilledMode();
}

void MainUI::showHWWireFrameMode() {
  wrapper->demoHWWireFrameMode();
}

void MainUI::showGPUShader() {
  wrapper->demoGPUShader();
}
